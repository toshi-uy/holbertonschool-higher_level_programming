"""
Importing the function from the module:
    >>> add_integer = __import__('0-add_integer').add_integer

    Checking for module docstring:
    >>> m = __import__("0-add_integer").__doc__
    >>> len(m) > 1
    True
    
    Checking for function docstring:
    >>> f = __import__("0-add_integer").add_integer.__doc__
    >>> len(f) > 1
    True

    >>> add_integer(1, 2)
    3
    >>> add_integer(-3,5)
    2
    >>> add_integer(-90)
    8
    >>> add_integer()
    Traceback (most recent call last):
              ...
    TypeError: add_integer() missing 1 required positional argument: 'a'
    >>> add_integer('a', 0)
    Traceback (most recent call last):
              ...
    TypeError: a must be an integer
    >>> add_integer(5, 'hola')
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer(1e1000, 5)
    Traceback (most recent call last):
        ...
    OverflowError: cannot convert float infinity to integer
    >>> add_integer(2, 5, 3)
    Traceback (most recent call last):
        ...
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
    >>> add_integer(None)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer
    >>> add_integer(1, "2")
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

"""
  
